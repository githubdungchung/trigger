name: Bulk Commit With Py

on:
  workflow_dispatch:

jobs:
  create-commits:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
          token: ${{ secrets.PAT }}
          persist-credentials: false

    - name: Set up Python
      uses: actions/setup-python@v5

    - name: Configure Git
      run: |
        git config --global user.name 'githubdungchung'
        git config --global user.email '165872053+githubdungchung@users.noreply.github.com'

    - name: Create Python script
      run: |
        echo "import os" > create_commits.py
        echo "import subprocess" >> create_commits.py
        echo "def get_last_commit_index(file_path):" >> create_commits.py
        echo "    if os.path.exists(file_path):" >> create_commits.py
        echo "        with open(file_path, 'r') as file:" >> create_commits.py
        echo "            return int(file.read().strip())" >> create_commits.py
        echo "    return 0" >> create_commits.py
        echo "def save_last_commit_index(file_path, index):" >> create_commits.py
        echo "    with open(file_path, 'w') as file:" >> create_commits.py
        echo "        file.write(str(index))" >> create_commits.py
        echo "def create_commits(number_of_commits, start_index):" >> create_commits.py
        echo "    batch_size = 100" >> create_commits.py
        echo "    current_index = start_index" >> create_commits.py
        echo "    for i in range(1, number_of_commits + 1):" >> create_commits.py
        echo "        current_index += 1" >> create_commits.py
        echo "        subprocess.run(['git', 'commit', '--allow-empty', '-m', f'Empty commit {current_index}'])" >> create_commits.py
        echo "        if i % batch_size == 0:" >> create_commits.py
        echo "            subprocess.run(['git', 'pull', '--rebase'])" >> create_commits.py
        echo "            subprocess.run(['git', 'push', 'https://${{ secrets.PAT }}@github.com/${{ github.repository }}.git', 'HEAD:main'])" >> create_commits.py
        echo "    remaining_commits = number_of_commits % batch_size" >> create_commits.py
        echo "    if remaining_commits > 0:" >> create_commits.py
        echo "        subprocess.run(['git', 'pull', '--rebase'])" >> create_commits.py
        echo "        subprocess.run(['git', 'push', 'https://${{ secrets.PAT }}@github.com/${{ github.repository }}.git', 'HEAD:main'])" >> create_commits.py
        echo "    return current_index" >> create_commits.py
        echo "if __name__ == '__main__':" >> create_commits.py
        echo "    file_path = 'last_commit_index.txt'" >> create_commits.py
        echo "    last_index = get_last_commit_index(file_path)" >> create_commits.py
        echo "    new_index = create_commits(1000000, last_index)" >> create_commits.py  # Adjust the number of commits as needed
        echo "    save_last_commit_index(file_path, new_index)" >> create_commits.py

    - name: Run create_commits.py
      run: python create_commits.py

    - name: Commit last_commit_index.txt
      run: |
        git add last_commit_index.txt
        git commit -m "Update last commit index"
        git push

    - name: Trigger Bulk Projects Creation workflow
      run: |
        curl -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.PAT }}" \
          https://api.github.com/repos/${{ github.repository }}/actions/workflows/bulk_projects_creation.yml/dispatches \
          -d '{"ref":"main"}'
